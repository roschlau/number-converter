buildscript {
    ext.kotlin_version = '1.2.51'
    ext.arrow_version = "0.7.2"
    ext.junit_version = '5.2.0'


    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'

    }
}

group 'com.github.roschlau'
version '1.0-SNAPSHOT'

apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'


sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compile project(':core')

    // Coroutines
//    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.23.4'

    // Vavr
//    compile 'io.vavr:vavr:0.9.0'

    // Arrow
    compile "io.arrow-kt:arrow-core:$arrow_version"
    compile "io.arrow-kt:arrow-syntax:$arrow_version"
    compile "io.arrow-kt:arrow-typeclasses:$arrow_version"
    compile "io.arrow-kt:arrow-data:$arrow_version"
    compile "io.arrow-kt:arrow-instances-core:$arrow_version"
    compile "io.arrow-kt:arrow-instances-data:$arrow_version"
//    kapt    "io.arrow-kt:arrow-annotations-processor:$arrow_version"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
    testImplementation("com.nhaarman:mockito-kotlin-kt1.1:1.6.0") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    }
    testImplementation 'com.natpryce:hamkrest:1.4.2.2'

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
kotlin {
    experimental {
        coroutines 'enable'
    }
}
